/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as PrototypesImport } from './routes/prototypes'
import { Route as PrototypeImport } from './routes/prototype'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutAdminImport } from './routes/_layout/admin'
import { Route as PrototypePrototypeIdPlayImport } from './routes/prototype.$prototypeId.play'
import { Route as PrototypePrototypeIdEditImport } from './routes/prototype.$prototypeId.edit'
import { Route as LayoutPrototypeAllImport } from './routes/_layout/prototype.all'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const PrototypesRoute = PrototypesImport.update({
  id: '/prototypes',
  path: '/prototypes',
  getParentRoute: () => rootRoute,
} as any)

const PrototypeRoute = PrototypeImport.update({
  id: '/prototype',
  path: '/prototype',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

const PrototypePrototypeIdPlayRoute = PrototypePrototypeIdPlayImport.update({
  id: '/$prototypeId/play',
  path: '/$prototypeId/play',
  getParentRoute: () => PrototypeRoute,
} as any)

const PrototypePrototypeIdEditRoute = PrototypePrototypeIdEditImport.update({
  id: '/$prototypeId/edit',
  path: '/$prototypeId/edit',
  getParentRoute: () => PrototypeRoute,
} as any)

const LayoutPrototypeAllRoute = LayoutPrototypeAllImport.update({
  id: '/prototype/all',
  path: '/prototype/all',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/prototype': {
      id: '/prototype'
      path: '/prototype'
      fullPath: '/prototype'
      preLoaderRoute: typeof PrototypeImport
      parentRoute: typeof rootRoute
    }
    '/prototypes': {
      id: '/prototypes'
      path: '/prototypes'
      fullPath: '/prototypes'
      preLoaderRoute: typeof PrototypesImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      id: '/_layout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/prototype/all': {
      id: '/_layout/prototype/all'
      path: '/prototype/all'
      fullPath: '/prototype/all'
      preLoaderRoute: typeof LayoutPrototypeAllImport
      parentRoute: typeof LayoutImport
    }
    '/prototype/$prototypeId/edit': {
      id: '/prototype/$prototypeId/edit'
      path: '/$prototypeId/edit'
      fullPath: '/prototype/$prototypeId/edit'
      preLoaderRoute: typeof PrototypePrototypeIdEditImport
      parentRoute: typeof PrototypeImport
    }
    '/prototype/$prototypeId/play': {
      id: '/prototype/$prototypeId/play'
      path: '/$prototypeId/play'
      fullPath: '/prototype/$prototypeId/play'
      preLoaderRoute: typeof PrototypePrototypeIdPlayImport
      parentRoute: typeof PrototypeImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutAdminRoute: typeof LayoutAdminRoute
  LayoutSettingsRoute: typeof LayoutSettingsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutPrototypeAllRoute: typeof LayoutPrototypeAllRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAdminRoute: LayoutAdminRoute,
  LayoutSettingsRoute: LayoutSettingsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutPrototypeAllRoute: LayoutPrototypeAllRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

interface PrototypeRouteChildren {
  PrototypePrototypeIdEditRoute: typeof PrototypePrototypeIdEditRoute
  PrototypePrototypeIdPlayRoute: typeof PrototypePrototypeIdPlayRoute
}

const PrototypeRouteChildren: PrototypeRouteChildren = {
  PrototypePrototypeIdEditRoute: PrototypePrototypeIdEditRoute,
  PrototypePrototypeIdPlayRoute: PrototypePrototypeIdPlayRoute,
}

const PrototypeRouteWithChildren = PrototypeRoute._addFileChildren(
  PrototypeRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/prototype': typeof PrototypeRouteWithChildren
  '/prototypes': typeof PrototypesRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/admin': typeof LayoutAdminRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/prototype/all': typeof LayoutPrototypeAllRoute
  '/prototype/$prototypeId/edit': typeof PrototypePrototypeIdEditRoute
  '/prototype/$prototypeId/play': typeof PrototypePrototypeIdPlayRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/prototype': typeof PrototypeRouteWithChildren
  '/prototypes': typeof PrototypesRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/admin': typeof LayoutAdminRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/prototype/all': typeof LayoutPrototypeAllRoute
  '/prototype/$prototypeId/edit': typeof PrototypePrototypeIdEditRoute
  '/prototype/$prototypeId/play': typeof PrototypePrototypeIdPlayRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/prototype': typeof PrototypeRouteWithChildren
  '/prototypes': typeof PrototypesRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/_layout/admin': typeof LayoutAdminRoute
  '/_layout/settings': typeof LayoutSettingsRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/prototype/all': typeof LayoutPrototypeAllRoute
  '/prototype/$prototypeId/edit': typeof PrototypePrototypeIdEditRoute
  '/prototype/$prototypeId/play': typeof PrototypePrototypeIdPlayRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/prototype'
    | '/prototypes'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/admin'
    | '/settings'
    | '/'
    | '/prototype/all'
    | '/prototype/$prototypeId/edit'
    | '/prototype/$prototypeId/play'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/prototype'
    | '/prototypes'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/admin'
    | '/settings'
    | '/'
    | '/prototype/all'
    | '/prototype/$prototypeId/edit'
    | '/prototype/$prototypeId/play'
  id:
    | '__root__'
    | '/_layout'
    | '/login'
    | '/prototype'
    | '/prototypes'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/_layout/admin'
    | '/_layout/settings'
    | '/_layout/'
    | '/_layout/prototype/all'
    | '/prototype/$prototypeId/edit'
    | '/prototype/$prototypeId/play'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
  PrototypeRoute: typeof PrototypeRouteWithChildren
  PrototypesRoute: typeof PrototypesRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  LoginRoute: LoginRoute,
  PrototypeRoute: PrototypeRouteWithChildren,
  PrototypesRoute: PrototypesRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/login",
        "/prototype",
        "/prototypes",
        "/recover-password",
        "/reset-password",
        "/signup"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/admin",
        "/_layout/settings",
        "/_layout/",
        "/_layout/prototype/all"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/prototype": {
      "filePath": "prototype.tsx",
      "children": [
        "/prototype/$prototypeId/edit",
        "/prototype/$prototypeId/play"
      ]
    },
    "/prototypes": {
      "filePath": "prototypes.tsx"
    },
    "/recover-password": {
      "filePath": "recover-password.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_layout/admin": {
      "filePath": "_layout/admin.tsx",
      "parent": "/_layout"
    },
    "/_layout/settings": {
      "filePath": "_layout/settings.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/prototype/all": {
      "filePath": "_layout/prototype.all.tsx",
      "parent": "/_layout"
    },
    "/prototype/$prototypeId/edit": {
      "filePath": "prototype.$prototypeId.edit.tsx",
      "parent": "/prototype"
    },
    "/prototype/$prototypeId/play": {
      "filePath": "prototype.$prototypeId.play.tsx",
      "parent": "/prototype"
    }
  }
}
ROUTE_MANIFEST_END */
